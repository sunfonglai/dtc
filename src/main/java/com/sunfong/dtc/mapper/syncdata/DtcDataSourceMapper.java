package com.sunfong.dtc.mapper.syncdata;

import com.sunfong.dtc.dob.entity.syncdata.DtcDataSource;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Component;

import java.util.List;

@Component(value = "dtcDataSourceMapper")
public interface DtcDataSourceMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DTC_DATA_SOURCE
     *
     * @mbg.generated 2018-12-19 09:45:51
     */
    int deleteByPrimaryKey(String sourceId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DTC_DATA_SOURCE
     *
     * @mbg.generated 2018-12-19 09:45:51
     */
    int insert(DtcDataSource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DTC_DATA_SOURCE
     *
     * @mbg.generated 2018-12-19 09:45:51
     */
    int insertSelective(DtcDataSource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DTC_DATA_SOURCE
     *
     * @mbg.generated 2018-12-19 09:45:51
     */
    DtcDataSource selectByPrimaryKey(String sourceId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DTC_DATA_SOURCE
     *
     * @mbg.generated 2018-12-19 09:45:51
     */
    int updateByPrimaryKeySelective(DtcDataSource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DTC_DATA_SOURCE
     *
     * @mbg.generated 2018-12-19 09:45:51
     */
    int updateByPrimaryKey(DtcDataSource record);

    List selectDataSource();

    List selectBySql(@Param("sql") String sql);

    int deleteBySql(@Param("sql")String sql);

    int insertBySql(@Param("sql")String sql);
}

